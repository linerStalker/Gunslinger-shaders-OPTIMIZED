#include "common.h"

uniform sampler2D   s_diffuse;
uniform	sampler2D	s_half_depth;

#include "lmodel.h"
#include "hmodel.h"

#include "ssao_blur.ps"
#include "ssao.ps"
#include "ssao_hbao.ps"

struct         _input      {
        float4         hpos       :POSITION;
#ifdef    USE_VTF
          float4         tc0               :TEXCOORD0;
#else
          float2         tc0               :TEXCOORD0;
#endif
	float2	tcJ	:TEXCOORD1;
};

struct        _out                {
        half4        low               :COLOR0;
        half4        high       :COLOR1;
};

uniform sampler1D         fog_table;

_out         main                (_input I)
{
          
          float4 P  =tex2D         (s_position,  I.tc0);       
          half4 N   =tex2D         (s_normal,    I.tc0);       
          half4 D   =tex2D         (s_diffuse,   I.tc0);       
          half4 L   =tex2D         (s_accumulator,I.tc0);

#ifdef FORCE_GLOSS
        D.w          =    FORCE_GLOSS    ;
#endif

        
	half mtl=P.w;
#ifdef    USE_R2_STATIC_SUN
	half	sun_occ  =   P.w*2;
			mtl=xmaterial;
            L           +=   Ldynamic_color*sun_occ*plight_infinity	(mtl,P.xyz,N.xyz,Ldynamic_dir);
#endif

        
        half3       hdiffuse,hspecular;

	


#ifdef USE_HBAO
	float occ=calc_hbao(P.z,N,I.tc0);
#else
	half occ=calc_ssao(P,N,I.tc0,I.tcJ);
#endif


        hmodel		(hdiffuse,hspecular,mtl,N.w,D.w,P.xyz,N.xyz);

	hdiffuse*=occ;
	hspecular*=occ;

        half4         light =half4         (L.rgb+hdiffuse,L.w);
        half4         C     =D*light;                    

	half3         spec  =C.www      +hspecular;


		half3       color=C.rgb+spec;
        
        float3        	pos  =P.xyz;
        float         	distance=length		(pos);
        float         	fog=saturate		(distance*fog_params.w+fog_params.x);
                      	color=lerp     		(color,fog_color,fog);
        half        	skyblend=saturate		(fog*fog);
 
#ifdef    USE_VTF
        half          	tm_scale  =I.tc0.w;       
#else
        half         	tm_scale  =tex2D        (s_tonemap,I.tc0).x;
#endif
        _out        	o;
        tonemap        	(o.low,o.high,color,tm_scale);
                        o.low.a   =skyblend;
						o.high.a=skyblend;

		return        	o;
}