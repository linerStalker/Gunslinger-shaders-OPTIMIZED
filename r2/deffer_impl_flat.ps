#include "common.h"
#include "sload.h"

#define	USE_4_DETAIL
uniform sampler2D s_mask,s_dt_r,s_dt_g,s_dt_b,s_dt_a,s_dn_r,s_dn_g,s_dn_b,s_dn_a;
#if defined(USE_TDETAIL)&& defined(USE_4_DETAIL)
#	define	USE_4_BUMP
#endif

#ifdef USE_4_BUMP
f_deffer 	main	(p_bumped I)
#else
f_deffer 	main	(p_flat I)
#endif
{
	f_deffer	O;
 	
	half4 D=tbase		(I.tcdh);
	half G=def_gloss;
# ifdef	USE_TDETAIL
 # ifdef USE_4_DETAIL
	half4 mask=tex2D(s_mask,I.tcdh);
	mask/=dot(mask,1);

	half3 dt=tex2D(s_dt_r,I.tcdbump)*mask.r;
	dt+=tex2D(s_dt_g,I.tcdbump)*mask.g;
	dt+=tex2D(s_dt_b,I.tcdbump)*mask.b;
	dt+=tex2D(s_dt_a,I.tcdbump)*mask.a;
	D.rgb*=2*dt;

  # ifdef USE_4_BUMP
	half4	nT=tex2D(s_dn_r,I.tcdbump).wzyx;
	dt=(nT-0.5)*mask.r;
	G=nT.w*mask.r;
	nT=tex2D(s_dn_g,I.tcdbump).wzyx;
	dt+=(nT-0.5)*mask.g;
	G+=nT.w*mask.g;
	nT=tex2D(s_dn_b,I.tcdbump).wzyx;
	dt+=(nT-0.5)*mask.b;
	G+=nT.w*mask.b;
	nT=tex2D(s_dn_a,I.tcdbump).wzyx;
	dt+=(nT-0.5)*mask.a;
	G+=nT.w*mask.a;

	dt.z*=0.5;
	half3	N=mul(half3x3(I.M1,I.M2,I.M3),dt.xyz);
  # else
	half3	N=I.N.xyz;
  # endif

 # else
	D.rgb*=2*tex2D(s_detail,I.tcdbump).rgb;
 # endif
# else
	half3	N=I.N.xyz;
# endif

  O.Ne=half4(normalize(N),D.w);
  O.position=half4(I.position.xyz+O.Ne.xyz*def_virtualh/2.h,
  #ifdef USE_R2_STATIC_SUN
  tex2D(s_lmap,I.tcdh).w
  #else
  xmaterial
  #endif
  );
  O.C=half4 (D.x,D.y,D.z,G);

  return O;
}
