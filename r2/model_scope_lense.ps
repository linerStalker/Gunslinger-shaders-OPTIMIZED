#include "common.h"

struct 	v2p
{
 	float2 	tc0:		TEXCOORD0;
 	half3 	tc1:		TEXCOORD1;
  	half4	c0:			COLOR0;
};



float  resize(float input,float factor,float offset)
{
	return (input-0.5f+offset)/ factor+0.5f-offset;
}


uniform	float4		screen_res;
uniform	float4 		m_hud_params;
uniform	float4 		m_zoom_deviation;

uniform sampler2D	s_vp2;





float random(float2 co)
{
      return 0.5+get_noise(co);
};

half4 	main	(v2p I)	:COLOR
{

	half4	t_base=tex2D		(s_base,I.tc0);
 

	
	I.tc0.x=I.tc0.x+m_zoom_deviation.x;
	I.tc0.y=I.tc0.y+m_zoom_deviation.y;
	
	
	I.tc0.x=resize(I.tc0.x,screen_res.x/screen_res.y,0);
	half4	t_vp2	=tex2D		(s_vp2,I.tc0);
	
	half2 offset=distance(I.tc0,half2(.5f,.5f))*half2(m_hud_params.z,m_hud_params.z);
	
	t_vp2.r=tex2D	(s_vp2,I.tc0+offset).r;
	t_vp2.b=tex2D	(s_vp2,I.tc0-offset).b;
	
	half3	final	=half3(0,0,0);
	
	{
	
		
		
		
		
		
		
		half3 	base=lerp	(t_vp2,t_base,t_base.a);
				final=base;
		
}
	
	
	return  half4	(final.r,final.g,final.b,min(m_hud_params.y,m_hud_params.a));
}
