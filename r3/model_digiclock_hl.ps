#include "common.h"
#include "sload.h"

uniform	float4 	m_affects;
uniform	float4 	m_digiclock;

f_deffer main(p_flat I)
{
  f_deffer	O;
  float digit=m_digiclock.y;
  I.tcdh.x=digit+(I.tcdh.x*0.1);

  
  float3 D=s_base.Sample(smp_base,I.tcdh);

	
	float 	ms=xmaterial;
#ifdef USE_LM_HEMI

	float4	lm=s_hemi.Sample(smp_rtlinear,I.lmh);

	float 	h=lm.a;
# ifdef USE_R2_STATIC_SUN

			ms=lm.g;
# endif
#else
	float 	h=I.position.w;
# ifdef USE_R2_STATIC_SUN
		 	ms=I.tcdh.w;
# endif
#endif

	
	float noise=get_noise(I.tcdh*timers.z)*m_affects.x*m_affects.x*30;
	float4	t_noise=s_lmap.Sample(smp_base,I.tcdh);
	D.rgb+=t_noise.rgb*noise+0.1;

  
	float4 Ne=float4(normalize((float3)I.N.xyz),h);
	O=pack_gbuffer(
									Ne,
									float4(I.position.xyz+Ne.xyz*def_virtualh/2.h,ms),
									float4(D.rgb,def_gloss));

  return O;
}