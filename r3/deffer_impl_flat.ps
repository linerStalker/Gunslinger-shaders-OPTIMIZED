#include "common.h"
#include "sload.h"

#define	USE_4_DETAIL

#if defined(USE_TDETAIL)&& defined(USE_4_DETAIL)
#	define	USE_4_BUMP
Texture2D 	s_mask,s_dt_r,s_dt_g,s_dt_b,s_dt_a;
#endif

#ifdef USE_4_BUMP
Texture2D 	s_dn_r,s_dn_g,s_dn_b,s_dn_a;
f_deffer 	main	(p_bumped I)
#else
f_deffer 	main	(p_flat I)
#endif
{
	f_deffer	O;
 	
	float4 D=tbase(I.tcdh);
	float G=def_gloss;
# ifdef	USE_TDETAIL
 # ifdef USE_4_DETAIL
	float4	mask=s_mask.Sample(smp_base,I.tcdh);
	mask/=dot(mask,1);

	float3	dt=s_dt_r.Sample (smp_base,I.tcdbump)*mask.r;
	dt+=s_dt_g.Sample (smp_base,I.tcdbump)*mask.g;
	dt+=s_dt_b.Sample (smp_base,I.tcdbump)*mask.b;
	dt+=s_dt_a.Sample (smp_base,I.tcdbump)*mask.a;
	D.rgb*=2*dt;

  # ifdef USE_4_BUMP
	float4	nT=s_dn_r.Sample(smp_linear,I.tcdbump).wzyx;

	dt=(nT-0.5)*mask.r;
	G=nT.w*mask.r;
	nT=s_dn_g.Sample(smp_linear,I.tcdbump).wzyx;
	dt+=(nT-0.5)*mask.g;
	G+=nT.w*mask.g;
	nT=s_dn_b.Sample(smp_linear,I.tcdbump).wzyx;
	dt+=(nT-0.5)*mask.b;
	G+=nT.w*mask.b;
	nT=s_dn_a.Sample(smp_linear,I.tcdbump).wzyx;
	dt+=(nT-0.5)*mask.a;
	G+=nT.w*mask.a;

	dt.z*=0.5;
	float3	N=mul(float3x3(I.M1,I.M2,I.M3),dt.xyz);

  # else
	float3	N=I.N.xyz;
  # endif

 # else

	D.rgb*=2*s_detail.Sample(smp_base,I.tcdbump).rgb;
 # endif
# else
	float3	N=I.N.xyz;
# endif
  
  float4     Ne=float4	(normalize(N),D.w);
  O=pack_gbuffer(				Ne,
								float4 	(I.position.xyz+Ne.xyz*def_virtualh/2.h,
								#ifdef USE_R2_STATIC_SUN
								s_lmap.Sample(smp_base,I.tcdh).w
								#else
								xmaterial
								#endif
								),
								float4	(D.x,D.y,D.z,		G));

  return O;
}
